#!/usr/bin/env ruby
#
# This is a script for modifying copies of MacVim to uniquely identify them.
#
DELETE = ["-d", "--delete"].include?(ARGV[0])

APP="MacVim"
BUNDLE_ID="VIMM"

app_specs = [
['VIM3', 'Todo',           'VimPaleGreen.icns' ],
['VIM8', 'Scratch',        'VimOrange.icns'    ],
['VIMW', 'WorkScratch',    'VimGrey.icns'      ],
['VIMT', 'WorkTodo',       'VimBlue.icns'      ],
['VIMM', 'MacVim',         'VimGreen.icns'     ],
#['VIM4', 'Vimwiki',        'VimPaleGreen.icns' ],
#['VIM5', 'Tasks',          'VimPurple.icns'    ],
#['VIM7', 'SourceCode',     'VimBlue.icns'      ],
#['VIM6', 'Research',       'VimGrey.icns'      ],
#['VIMH', 'VimHelp',        'VimGrey.icns'      ],
#['VIMT', 'Vimput',         'VimOrange.icns'    ],
#['VIMT', 'TwitVim',        'VimBlue.icns'     ],
#['VIMA', 'AdiumVim',       'VimOrange.icns'   ],
#['VIMC', 'ColloquyVim',    'VimOrange.icns'   ],
]

class AppClone

  attr_accessor :identifier, :name, :icon

  def initialize(spec)
    @identifier, @name, @icon = spec
    @bundle_id = if /Scratch/ =~ @name
                   "org.vim.MacVim"
                 else
                   "org.vim.MacVim.#{@name}"
                 end
  end

  def install_root
    "/Applications"
  end

  def app_path
    "#{install_root}/#{@name}.app"
  end

  def contents_path
    "#{app_path}/Contents"
  end

  def original_root
    original_path = Dir.glob("/usr/local/Cellar/macvim/**/#{APP}.app")
    if original_path.length > 0
      return File.dirname(original_path[-1])
    end
    original_path = "/Applications/#{APP}.app"
    if File.exists? original_path
      return File.dirname(original_path)
    end
  end

  def copy_original
    unless File.exist? app_path
      printf "%s was not found. Copying...\n", app_path
      `cp -Rp "#{original_root}/#{APP}.app" "#{app_path}"`
    end
  end

  def delete
    if File.exist? app_path
      printf "Deleting %s...\n", app_path
      `rm -rf "#{app_path}"`
    end
  end

  def clone
    delete if DELETE
    copy_original
    if File.exist? contents_path
      `/usr/libexec/PlistBuddy #{contents_path}/Info.plist -c 'Set :CFBundleIdentifier org.vim.'#{@name}`
      `/usr/libexec/PlistBuddy #{contents_path}/Info.plist -c 'Set :CFBundleName '#{@name}`
      `/usr/libexec/PlistBuddy #{contents_path}/Info.plist -c 'Set :CFBundleSignature '#{@identifier}`
      `/usr/bin/sed -i '' -es/#{BUNDLE_ID}/#{@identifier}/ #{contents_path}/PkgInfo`
      `/bin/cp ~/Pictures/#{APP}Icons/#{@icon} #{contents_path}/Resources/#{APP}.icns`
      `rm -rf #{contents_path}/_CodeSignature`
    end
  end

end

apps = []
for spec in app_specs do
  apps << AppClone.new(spec)
end
for app in apps
  app.clone
end
