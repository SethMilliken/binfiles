#!/usr/bin/env ruby
require "uri"
require "optparse"
require "pathname"


# Set Defaults
options = {}
options[:path]      = Pathname.new("#{$0}")
options[:dir]       = options[:path].dirname.to_s
options[:basename]  = options[:path].basename.to_s
options[:instance]  = 'FirefoxResearch'
options[:channel]   = 'dev-ua.\#ops'
options[:host]      = 'ax'
options[:logdir]    = '~/.weechat/logs'
options[:lookback]  = 100
options[:protocols] = ['http', 'https']
options[:exclusive] = true

# Parse Options
optparse = OptionParser.new do|opts|
  opts.banner = "Usage: #{options[:basename]} [options]"
  opts.on( '-b', '--browser INSTANCE', 'name of Firefox instance used to open link') do |instance|
    puts instance
    options[:instance] = instance
  end
  opts.on( '-u', '--url URL', 'url to open') do |url|
    options[:url] = url
  end
  opts.on( '-c', '--channel CHANNEL', 'name of channel log to scrape') do |channel|
    options[:channel] = channel
  end
  opts.on( '-d', '--logdir LOGDIR', 'log directory') do |logdir|
    options[:logdir] = logdir
  end
  opts.on( '-l', '--lookback DEPTH', 'lookback depth') do |depth|
    options[:lookback] = depth
  end
  opts.on( '-t', '--host TARGET', 'target host') do |host|
    options[:host] = host
  end
  opts.on( '-x', '--[no-]exclusive', 'only show most recent') do |exclusive|
    options[:exclusive] = exclusive
  end
  opts.on( '-h', '--help', 'display this help') do
    puts opts
    exit
  end
end

optparse.parse!

def clean_url(url)
  url.gsub(/\)$/, '')
end

if !options[:url]
  logfile = "#{options[:logdir]}/irc.#{options[:channel]}.weechatlog"
  command = "ssh #{options[:host]} 'tail -#{options[:lookback]} #{logfile}'"
  raw_content = %x[ #{command} ].force_encoding("UTF-8")
end


urls = []
if options[:url]
  urls << options[:url]
else
  URI::extract(raw_content, options[:protocols]) do |url|
    urls << url
  end
end

if urls.length == 0
  puts %x[ #{options[:dir]}/activate #{options[:instance]} blink "NOTFOUND" ]
else
  urls = urls[-1, 1] if options[:exclusive]
end

urls.each do |url|
  instance = case
               when url.index(/monitoring\.prod|clusto\.prod/)
                 "Firefox Developer Edition"
               when url.index(/github\.com|jenkins\.prod|tofurkey\.urbanairship|jiveon|atlassian\.prod/)
                 "Firefox"
               else
                 options[:instance]
               end
  puts %x[ #{options[:dir]}/activate #{instance} link "#{url}" ]
  sleep 1
end

# vim: set ts=2 sw=2:
