#!/usr/bin/env bash
#set -e

TIMESTAMP=$(date +%Y-%m-%d.%T)

function banner() {
    text="$1"
    printf "===============================================[     %20s   ]=====\n" "${text}"
}

function detect_root() {
    toplevel=$(git rev-parse --git-dir | awk -F'.git' '{print $1}')
    cd ${toplevel:-.}
    pwd
}

function super_update() {
    banner "SUPER UPDATE"
    git pull --ff-only
}

function store_branchnames() {
    banner "STORE BRANCHNAMES"
    git submodule foreach 'git config user.default-branch $(git rev-parse --abbrev-ref HEAD)'
}

function dirt_check() {
    banner "DIRT CHECK"
    git submodule foreach '                                                    \
        if [ -n "$(git diff-index HEAD --)" ]; then                            \
            git stash save --quiet "autostash '${TIMESTAMP}'" &&               \
            git config user.autostashed true &&                                \
            echo "\tStashed dirt.";                                            \
        fi;                                                                    \
    '
}

function submodule_update() {
    banner "SUBMODULE UPDATE"
    git submodule update --init
}

function checkout() {
    banner "CHECKOUT"
    default_branch="$(git config user.default-branch)"
    git submodule foreach '                                                    \
        if [[ -n "${default_branch}" ]]; then                                  \
            git checkout ${default_branch};                                    \
        else                                                                   \
            git checkout master || true;                                       \
        fi;                                                                    \
    '
}

function update() {
    banner "UPDATE"
    git submodule foreach '                                                    \
        if [[ "HEAD" == "$(git rev-parse --abbrev-ref HEAD)" ]]; then          \
            echo "\tCannot update detached head.";                             \
        else                                                                   \
            git pull --rebase;                                                 \
        fi;                                                                    \
    '
}

function poption() {
    banner "POP-TION"
    git submodule foreach '                                                    \
        if [[ -n "$(git config user.autostashed)" ]]; then                     \
            git stash pop --index --quiet &&                                   \
            git config --unset user.autostashed &&                             \
            echo "\tRestored dirt.";                                           \
        fi;                                                                    \
    '
}

function save_checkpoint() {
    banner "SAVE CHECKPOINT"
    git commit --message="checkpoint ${TIMESTAMP}" -- \
        .gitmodules $(awk -F\" '/submodule/{printf $2 " "}' .gitmodules)
    default_remote=$(git config branch.$(git rev-parse --abbrev-ref HEAD).remote)
    echo "git push ${default_remote} HEAD"
}

function run() {
    detect_root
    super_update
    store_branchnames
    dirt_check
    submodule_update
    checkout
    update
    poption
    save_checkpoint
}

run

#vim: ft=sh ve=all
