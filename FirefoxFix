#!/usr/bin/env ruby
#
# This is a script for modifying copies of Firefox to uniquely identify them.
#

class FirefoxClone
  ATTRIBUTES = %w{ original_sig icon_name bundle_id app_prefix identifier name install_root icon original }.map {|attr| attr.to_sym }
  attr *ATTRIBUTES

  def initialize(args = {})
    args = {:install_root => '/Applications', :icon => 'FirefoxBlue.icns', :app_prefix => 'Firefox', :original_sig => 'MOZB', :icon_name => 'firefox', :bundle_id => 'org.mozilla.firefox'}.merge(args)
    ATTRIBUTES.each {|attr| instance_variable_set("@#{attr}", args[attr]) }
    clone
  end

  def clone
    if /Scratch/ =~ @name
      bundle_id=@bundle_id
    else
      bundle_id="#{@bundle_id}.#{@name}"
    end
    create_copy
    if File.exist?(contents)
      `/usr/libexec/PlistBuddy #{contents}/Info.plist -c 'Set :CFBundleIdentifier #{bundle_id}'`
      `/usr/libexec/PlistBuddy #{contents}/Info.plist -c 'Set :CFBundleName '#{@name}`
      `/usr/libexec/PlistBuddy #{contents}/Info.plist -c 'Set :CFBundleSignature '#{@identifier}`
      `/usr/bin/sed -i '' -es/#{@original_sig}/#{@identifier}/ #{contents}/PkgInfo`
      `/bin/cp ~/Pictures/FirefoxIcons/#{@icon} #{contents}/Resources/#{@icon_name}.icns` unless @icon.nil?
    end
  end

  def destination
    "#{@install_root}/#{@app_prefix}#{@name}.app"
  end

  def contents
    "#{destination}/Contents"
  end

  def create_copy
    unless File.exist?(destination)
      clone_parent = "#{@install_root}/#{@original}.app"
      printf "'%s' not found. Cloning from '%s' (%s, %s)...\n", destination, clone_parent, @identifier, @icon
      `cp -Rp "#{clone_parent}" "#{destination}"`
    end
  end
end

FirefoxClone.new(:identifier => 'FFTE' , :name => 'Test'     , :original => 'Firefox' , :icon => 'FirefoxGlass.icns')
FirefoxClone.new(:identifier => 'FFTR' , :name => 'Track'    , :original => 'Firefox' , :icon => 'FirefoxSauron.icns')
FirefoxClone.new(:identifier => 'FFBR' , :name => 'Browse'   , :original => 'Firefox' , :icon => 'FirefoxWhite.icns')
FirefoxClone.new(:identifier => 'FFRE' , :name => 'Research' , :original => 'Firefox' , :icon => 'FirefoxBlue.icns')
#FirefoxClone.new(:identifier => 'FFVO' , :name => 'Volatile' , :original => 'Firefox')
#FirefoxClone.new(:identifier => 'FFDY' , :name => 'Dactyl'   , :original => 'Firefox')
