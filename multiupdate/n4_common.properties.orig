# Properties which are common to all the machines in the environment.

# Granted, this distinction is a little tenuous for local_test which has only one machine,
# but still, think of these properties as ones that WOULD be the same across your local
# machines if you had multiple local machines :-)

# Important for letting Spring know what database to connect to.
# Actual database parameters are consolidated into persistence.xml
hibernate.database=work01



# The environment of this barracuda.properties file.
#
barracuda.env=work01

# The paths to the file store root for this environment.
#
linux.filestore.path=/Nas/iv4/work01
windows.filestore.path=//stgnas01/STGNAS/iv4/work01

# The timeout for waiting for files to appear (should be 0 for local environments,
# and at least 10 for environments with NAS file stores)
#
filestore.timeout=10

# The timeout retry count for problems with NAS (should be 0 for local environments,
# and at least 3 for environments with NAS file stores)
#
filestore.retry=3



# The location of the asset manager.
#
versionfetcher.secure.url=https://n4.work01.nimblefish.com/versionfetcher
versionfetcher.url=http://n4.work01.nimblefish.com/versionfetcher
versionfetcher.safe.url=http://n4.work01.nimblefish.com/safefetcher

# The location of the xmlrpc servlet.
#
xmlrpc.url=http://stgint01:8080/barracuda/xmlrpc

# The location of the xmlrpc external task runner.
xmlrpc.externaltaskrunner.windows.url=http://print01.sf.nimblefish.com:8081
# In staging environment, use stage01/external staging as the Firstlogic server
xmlrpc.externaltaskrunner.linux.url=http://stgext01.sf.nimblefish.com:8081


# WorkManager: number of tasks to start concurrently
#
workmanager.tasks=8

# Properties for job handlers.
#

# Number of execution units available for parallel processing.
jobhandler.availableExecutionUnits=4

# JobImportHandler properties: number of records to handle at a time.
# (eventually put this into job?!)
jobhandler.import.recordsize=500

# fixedwidthtocsv batch size
jobhandler.fixedwidthtocsv.recordsize=10000

# records per task for the CSV conversion job
jobhandler.RecordToCsv.recordsPerTask=500

# records per task for state update & idle.
# turned up a lot in 1.22.1 patch 2 due to new iterate/evict strategy - RobJ 20060728
jobhandler.stateupdate.recordsize=5000

# SegmentJob properties: number of records to segment at a time
jobhandler.segment.recordsize=500

# Records per task in Lowes Backload job/task... only applies to control record phase
#
jobhandler.lowesBackload.recordsPerTask=500

# record per task in chipEventMaker
#
jobhandler.chipeventmaker.batchsize=500
jobhandler.prospectupdate.batchsize=500
jobhandler.curriculumtrackupdater.batchsize=500

## this goes SUPER-FAST, so let's make big batches
jobhandler.curriculumtrackchipmaker.batchsize=5000

# number of prospects required to chip
#
jobhandler.chipmakerjob.minChipRecordCount=1

# number of records to chip per chipmakertask.
#
jobhandler.chipmaker.recordsize=500

# HACK: These should really be configured in the engineInstance configuration.
#
jobhandler.batchGeneratorCards.recordsPerSheet=4
jobhandler.batchGeneratorCards.sheetsPerBatch=201
jobhandler.batchGeneratorBrochures.recordsPerBatch=250

# ANOTHER hack: to work around firstlogic bug that louses up our embedded EOLs and trailing spaces
#
jobhandler.batchGeneratorCards.escapeHack=true
jobhandler.batchGeneratorBrochures.escapeHack=true


# Properties used to manage temporary files used by external sort.
#
#   local is the directory as viewed by the tomcat server
#   remote is the directory as viewed by the RPC server invoking the SORT command.
#
workfilemanager.workdir.local=/Nas/iv4/work01/Working
workfilemanager.workdir.remote=/Nas/iv4/work01/Working
workfilemanager.makeWorkDirPerUser = false
workfilemanager.preserveWorkDirFiles = false

# Properties for the First Logic external tasks to use
#

# When running firstlogic from a local_build, we invoke remotely via SSH.
# The same work directory must be accessible to the server itself (running locally)
# and the remotely invoked instance of the firstlogic app (ace or presort)
# ...so, we need to be careful what path we're using.
#
# For a conventional installation these will be the same.
#
# this is the path as viewed by the _server_
#
first.logic.workdir.local=/Nas/iv4/work01/Working

# and this is the one as viewed by the firstlogic process itself.
# (This path gets baked into various config files, etc).
#
first.logic.workdir.remote=/Nas/iv4/work01/Working

# for local_build, we create a per-user subdirectory under the workdir
# For a conventional build, this should be false.
#
first.logic.makeWorkDirPerUser=false

# postal directories
#
#   this must be relative to the remotely invoked Firstlogic apps,
#   so for local_test, so the unix-style path is correct.
#
first.logic.postal.directory=/opt/postware/dirs

# location of imagemagick utilities
#
imgMagick.installDir.windows=C:\\Program Files\\ImageMagick-6.1.9-Q8
imgMagick.installDir.linux=/usr/local/bin

# location of handle utility
#
handle.installDir.windows=C:\\Handle

#
# Start DataLogic Properties
#
#
# Path to the DataLogic executable
#
datalogics.executable = "C:\\Program Files\\Datalogics\\DL-100\\DL1000.exe"

# Path to the pdf2img executable
#
pdf2img.executable = "C:\\Program Files\\Datalogics\\DL-100\\PDF2IMG.exe"

# Records to composed (max record which will be used to create a softprove
#
datalogics.records.to.composed = 5

#
# End DataLogic Properties
#


#
# Mail properties
#
mail.smtp.host=exchange.nimblefish.com




# Default job priorities for backwards compatibility with existing makers.
#
# Calling ProcessFactory.createProcessTreeWithPriority lets you set the priority yourself;
# otherwise, one of these priorities will be used if your process configuration has the same code;
# otherwise, the default ProcessPriority.USER_BATCH priority will be used.
#
# These constants are defined in src_core/com/nimblefish/core/work/ProcessPriority.java
#
job.priority.ideabook=PROSPECT_WAITING

job.priority.preview=USER_WAITING
# these next two should never be seen in production; test only
job.priority.DailyRunMonitor=USER_WAITING
job.priority.test=USER_WAITING

job.priority.daily_run_monitor=NIMBLEFISH_BATCH
job.priority.order_run=NIMBLEFISH_BATCH
job.priority.run_wk=NIMBLEFISH_BATCH
job.priority.lead_email=NIMBLEFISH_BATCH

job.priority.bulk_mail=USER_BATCH

job.priority.makeThumbsAndUpdate=USER_LOW_PRIORITY_BATCH


# Verbose logging for expression evaluator -- print stack trace on every failure
#
expression.logging.verbose=false

#The number of months in the past or in the future
#from now that are considered acceptable range
#for a process's external date.
process.externaldate.lower.limit=12
process.externaldate.upper.limit=12

#LDAP Propreties
ldap.url=ldap://saba.sf.nimblefish.com:389
ldap.user=barracuda_login_test
ldap.pass=N1mbl3t3st

# media URL
nimblevision.media.baseurl=http://media.work01.nimblefish.com

# this comment at the end of the file ensures that all properties before it are on lines that end in a carriage return

