# Properties which are common to all the machines in the environment.

# Granted, this distinction is a little tenuous for local_test which has only one machine,
# but still, think of these properties as ones that WOULD be the same across your local
# machines if you had multiple local machines :-)

# Important for letting Spring know what database to connect to.
# Actual database parameters are consolidated into persistence.xml
hibernate.database=qa



# The environment of this barracuda.properties file.
#
barracuda.env=qa01

# The paths to the file store root for this environment.
#
linux.filestore.path=/Nas/iv4/qa01
# -- windows.filestore.path=//nasqa/ftp/iv4/qa01
windows.filestore.path=//stgnas01/qanas1/ftp/iv4/qa01

# The timeout for waiting for files to appear (should be 0 for local environments,
# and at least 10 for environments with NAS file stores)
#
filestore.timeout=10

# The timeout retry count for problems with NAS (should be 0 for local environments,
# and at least 3 for environments with NAS file stores)
#
filestore.retry=3



# The location of the asset manager.
#
versionfetcher.secure.url=https://app.qa01.nimblefish.com/versionfetcher
versionfetcher.url=http://app.qa01.nimblefish.com/versionfetcher
versionfetcher.secure.private.url=https://app.qa01.nimblefish.com:8080/barracuda/versionfetcher
versionfetcher.private.url=http://app.qa01.nimblefish.com:8080/barracuda/versionfetcher
versionfetcher.safe.url=http://app.qa01.nimblefish.com/safefetcher

# The location of the xmlrpc servlet.
#
xmlrpc.url=http://scheduler.qa01.nimblefish.com:8080/barracuda/xmlrpc

# The location of the xmlrpc external task runner.
xmlrpc.externaltaskrunner.windows.url=http://print01.qa01.nimblefish.com:8081
xmlrpc.externaltaskrunner.linux.url=http://data01.qa01.nimblefish.com:8081

#Changing externalSortTimeout from 1800 to 5400 to solve TS#11033 issue.
# If this is still a problem we will have to revisit this issue.
xmlrpc.externaltaskrunner.linux.externalSortTimeout=5400

nfxmlrpcclient.maximum_retries=20
nfxmlrpcclient.sleep_time_ms_between_retries=1000

# WorkManager: Maximum number of general tasks that can run concurrently.
#
workmanager.tasks=16
# Maximum number of tasks in particular families that can run concurrently.
# Families are comma separated and must be in this format: {<regex>, <maxtasks>}
workmanager.tasks.concurrent.family.configuration={FirstLogic,2},{(FusionPro|Datalogics),8}

# Properties for job handlers.
#

# Default maximum child tasks that will be created for parallel jobs.
jobhandler.parallel.print.maxTasksPerJob=50
jobhandler.parallel.recordtocsv.maxTasksPerJob=50

# JobImportHandler properties: number of records to handle at a time.
# (eventually put this into job?!)
jobhandler.import.recordsize=500

# fixedwidthtocsv batch size
jobhandler.fixedwidthtocsv.recordsize=10000

# records per task for the CSV conversion job
jobhandler.RecordToCsv.recordsPerTask=500

# records per task for state update & idle.
# turned up a lot in 1.22.1 patch 2 due to new iterate/evict strategy - RobJ 20060728
jobhandler.stateupdate.recordsize=5000

# SegmentJob properties: number of records to segment at a time
jobhandler.segment.recordsize=500

# Records per task in Lowes Backload job/task... only applies to control record phase
#
jobhandler.lowesBackload.recordsPerTask=500

# record per task in chipEventMaker
#
jobhandler.chipeventmaker.batchsize=500
jobhandler.prospectupdate.batchsize=500
jobhandler.curriculumtrackupdater.batchsize=500

## this goes SUPER-FAST, so let's make big batches
jobhandler.curriculumtrackchipmaker.batchsize=5000

# number of prospects required to chip
#
jobhandler.chipmakerjob.minChipRecordCount=1

# number of records to chip per chipmakertask.
#
jobhandler.chipmaker.recordsize=500


# HACK: These should really be configured in the engineInstance configuration.
#
jobhandler.batchGeneratorCards.recordsPerSheet=4
jobhandler.batchGeneratorCards.sheetsPerBatch=201
jobhandler.batchGeneratorBrochures.recordsPerBatch=250

# ANOTHER hack: to work around firstlogic bug that louses up our embedded EOLs and trailing spaces
#
jobhandler.batchGeneratorCards.escapeHack=true
jobhandler.batchGeneratorBrochures.escapeHack=true

# Properties used to manage temporary files used by external sort.
#
#   local is the directory as viewed by the tomcat server
#   remote is the directory as viewed by the RPC server invoking the SORT command.
#
workfilemanager.workdir.local=/Nas/iv4/qa01/Working
workfilemanager.workdir.remote=/Nas/iv4/qa01/Working
workfilemanager.makeWorkDirPerUser = false
workfilemanager.preserveWorkDirFiles = false


# Properties for the First Logic external tasks to use
#

# When running firstlogic from a local_build, we invoke remotely via SSH.
# The same work directory must be accessible to the server itself (running locally)
# and the remotely invoked instance of the firstlogic app (ace or presort)
# ...so, we need to be careful what path we're using.
#
# For a conventional installation these will be the same.
#
# this is the path as viewed by the _server_
#
first.logic.workdir.local=/Nas/iv4/qa01/Working

# and this is the one as viewed by the firstlogic process itself.
# (This path gets baked into various config files, etc).
#
first.logic.workdir.remote=/Nas/iv4/qa01/Working

# for local_build, we create a per-user subdirectory under the workdir
# For a conventional build, this should be false.
#
first.logic.makeWorkDirPerUser=false

# postal directories
#
#   this must be relative to the remotely invoked Firstlogic apps,
#   so for local_test, so the unix-style path is correct.
#
first.logic.postal.directory=/opt/postware/dirs

# specifies the no output time out for all FirstLogic jobs
# in minutes
first.logic.noOutput.timeout= 60

# specifies the path to the FirstLogic templates relative 
# to the file store.
first.logic.template.directory=/standard_resources/FirstLogicTemplates

# location of imagemagick utilities
#
imgMagick.installDir.windows=C:\\Program Files\\ImageMagick-6.1.9-Q8
imgMagick.installDir.linux=/usr/local/bin

# location of handle utility
#
handle.installDir.windows=C:\\Handle

#
# Start DataLogic Properties
#
#
# Path to the DataLogic executable
#
datalogics.executable = "C:\\Program Files\\Datalogics\\DL-100\\DL1000.exe"

# Path to the pdf2img executable
#
pdf2img.executable = "C:\\Program Files\\Datalogics\\DL-100\\PDF2IMG.exe"

# Records to composed (max record which will be used to create a softprove
#
datalogics.records.to.composed = 5

#
# End DataLogic Properties
#


#
# Mail properties
#
mail.smtp.host=barracuda1.nimblefish.com

# FTP propeties

ftp.host = sardine

ftp.user = n4test

ftp.password = n4te$t


# Default job priorities for backwards compatibility with existing makers.
#
# Calling ProcessFactory.createProcessTreeWithPriority lets you set the priority yourself;
# otherwise, one of these priorities will be used if your process configuration has the same code;
# otherwise, the default ProcessPriority.USER_BATCH priority will be used.
#
# These constants are defined in src_core/com/nimblefish/core/work/ProcessPriority.java
#
job.priority.ideabook=PROSPECT_WAITING

job.priority.preview=USER_WAITING
# these next two should never be seen in production; test only
job.priority.DailyRunMonitor=USER_WAITING
job.priority.test=USER_WAITING

job.priority.daily_run_monitor=NIMBLEFISH_BATCH
job.priority.order_run=NIMBLEFISH_BATCH
job.priority.run_wk=NIMBLEFISH_BATCH
job.priority.lead_email=NIMBLEFISH_BATCH

job.priority.bulk_mail=USER_BATCH

job.priority.makeThumbsAndUpdate=USER_LOW_PRIORITY_BATCH

# This is set to low priority batch because if we are using a parallel
# job, it definitely implies long running. In this case,
# we want other, faster running jobs to take precedence, so as not to
# starve out the entire system. We may have to reevaluate this strategy
# longer term, but it has a lot of benefits for now. - SRoy (TS #8069)
job.priority.parallel_record_to_csv=USER_LOW_PRIORITY_BATCH
job.priority.print_cards=USER_LOW_PRIORITY_BATCH
job.priority.parallelFusionPro=USER_LOW_PRIORITY_BATCH


# Verbose logging for expression evaluator -- print stack trace on every failure
#
expression.logging.verbose=false

# Hyper-verbose logging -- print all intermediate bracket-bracket eval calls
#
expression.logging.hyperverbose=false

## Enabled the Expression Profiler -- not recommended unless you are debugging [[]] expressions and/or functions
#
expression.profilerEnabled=false


#The number of months in the past or in the future
#from now that are considered acceptable range
#for a process's external date.
process.externaldate.lower.limit=12
process.externaldate.upper.limit=12

# Process archiving
process.archive=true
process.archive.dir=/home/nimble/procarchive
process.archive.excludelist=pdf,ppml,gif,jpg,tif,tiff,jpeg,zip

#LDAP Propreties
ldap.url=ldap://saba.sf.nimblefish.com:389
ldap.user=barracuda_login_test
ldap.pass=N1mbl3t3st

#Process Archiving
process.archive=true
process.archive.dir=/Nas/iv4/qa01/procarchive
process.archive.excludelist=pdf,ppml,gif,jpg,tif,tiff,jpeg,zip

# Garbage Collection parameters
gc.fileversion.delay=30

# used by FileVersion.getAbsoluteMediaUrl() - this should probably be renamed fileversion.baseurl
nimblevision.media.baseurl=http://media.qa01.nimblefish.com

# used for upload
nimblevision.mediaupload.url=http://app.qa01.nimblefish.com/keyedmediaupload

# nimblevision URLs for player and nvml file
nimblevision.baseurl.player=http://media.qa01.nimblefish.com
nimblevision.baseurl.nvml=http://nv.qa01.nimblefish.com

# media encoder xml rpc status server
mediaEncoderXmlRpc.url=http://qaflix.nimblefish.com:8081/RPC2

# enables the XSS (Cross-site scripting) validation
xss.check=true
xss.check.pattern=[!\"#\\$%&'\\(\\)\\*\\+;<=>\\?\\[\\]\\^`\\{\\|\\}~]+

# default ui time in MS that a ui lock can hold a contentObject 
#(see uiLocked* fields in ContentOjbect) 
# 15 * 60,000 = 9000000 ms = 15 minutes
contentObjectLockTime=900000

# this comment at the end of the file ensures that all properties before it are on lines that end in a carriage return

